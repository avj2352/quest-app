{"version":3,"sources":["../../src/controllers/tag.controller.js"],"names":["TagController","req","res","TagModel","find","err","data","send","json","newTagRecord","body","save","name","params","findOneAndUpdate","new","deleteOne","message","_id","tagId"],"mappings":";;;;;;;qjBAAA;;;;;AAGA;;;;IAEaA,a,WAAAA,a;;;;;;;mCAEEC,G,EAAKC,G,EAAK;AACjBC,0BAASC,IAAT,CAAc,EAAd,EAAiB,UAACC,GAAD,EAAMC,IAAN,EAAa;AAC1B,oBAAGD,GAAH,EAAQH,IAAIK,IAAJ,CAASF,GAAT,EAAR,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAFqB,CAEL;AACxB,aAHD;AAIH;;AAED;;;;kCACUL,G,EAAKC,G,EAAK;AAChB,gBAAIO,eAAe,IAAIN,aAAJ,CAAaF,IAAIS,IAAjB,CAAnB;AACAD,yBAAaE,IAAb,CAAkB,UAACN,GAAD,EAAMC,IAAN,EAAc;AAC5B,oBAAGD,GAAH,EAAQH,IAAIK,IAAJ,CAASF,GAAT,EAAR,KACKH,IAAIK,IAAJ,CAASD,IAAT;AACR,aAHD;AAIH;;AAED;;;;qCACaL,G,EAAKC,G,EAAK;AACnBC,0BAASC,IAAT,CAAc,EAACQ,MAAMX,IAAIY,MAAJ,CAAWD,IAAlB,EAAd,EAAsC,UAACP,GAAD,EAAMC,IAAN,EAAa;AAC/C,oBAAGD,GAAH,EAAQH,IAAIK,IAAJ,CAASF,GAAT,EAAR,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAF0C,CAE1B;AACxB,aAHD;AAIH;;AAED;;;;wCACgBL,G,EAAKC,G,EAAK;AACtBC,0BAASW,gBAAT,CAA0B,EAACF,MAAMX,IAAIY,MAAJ,CAAWD,IAAlB,EAA1B,EAAmDX,IAAIS,IAAvD,EAA6D,EAAEK,KAAK,IAAP,EAA7D,EAA4E,UAACV,GAAD,EAAMC,IAAN,EAAc;AACtF,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAFiF,CAEjE;AACxB,aAHD;AAIH;;AAED;;;;wCACgBL,G,EAAKC,G,EAAK;AACtBC,0BAASa,SAAT,CAAmB,EAACJ,MAAMX,IAAIY,MAAJ,CAAWD,IAAlB,EAAnB,EAA4C,UAACP,GAAD,EAAO;AAC/C,oBAAIA,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAAS,EAAES,SAAS,iCAAX,EAAT;AACR,aAHD;AAIH;;AAED;;;;mCACWhB,G,EAAKC,G,EAAK;AACjBC,0BAASC,IAAT,CAAc,EAACc,KAAKjB,IAAIY,MAAJ,CAAWM,KAAjB,EAAd,EAAsC,UAACd,GAAD,EAAMC,IAAN,EAAa;AAC/C,oBAAGD,GAAH,EAAQH,IAAIK,IAAJ,CAASF,GAAT,EAAR,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAF0C,CAE1B;AACxB,aAHD;AAIH;;AAED;;;;sCACcL,G,EAAKC,G,EAAK;AACpBC,0BAASW,gBAAT,CAA0B,EAACI,KAAKjB,IAAIY,MAAJ,CAAWM,KAAjB,EAA1B,EAAmDlB,IAAIS,IAAvD,EAA6D,EAAEK,KAAK,IAAP,EAA7D,EAA4E,UAACV,GAAD,EAAMC,IAAN,EAAc;AACtF,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAFiF,CAEjE;AACxB,aAHD;AAIH;;AAED;;;;sCACcL,G,EAAKC,G,EAAK;AACpBC,0BAASa,SAAT,CAAmB,EAACE,KAAKjB,IAAIY,MAAJ,CAAWM,KAAjB,EAAnB,EAA4C,UAACd,GAAD,EAAO;AAC/C,oBAAIA,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAAS,EAAES,SAAS,iCAAX,EAAT;AACR,aAHD;AAIH","file":"tag.controller.js","sourcesContent":["/**\r\n * CRUD - Controller for Tag Model\r\n*/\r\nimport { TagModel } from './../models/tag.model';\r\n\r\nexport class TagController {\r\n\r\n    getAllTags(req, res) {\r\n        TagModel.find({},(err, data)=>{\r\n            if(err) res.send(err);\r\n            else res.json(data); // Get JSON format of contact\r\n        });\r\n    }\r\n    \r\n    // CREATE - new tag record\r\n    addNewTag(req, res) {\r\n        let newTagRecord = new TagModel(req.body);\r\n        newTagRecord.save((err, data)=> {\r\n            if(err) res.send(err);\r\n            else res.send(data);\r\n        });\r\n    }\r\n    \r\n    // RETRIEVE - tag record by name\r\n    getTagByName(req, res) {\r\n        TagModel.find({name: req.params.name},(err, data)=>{\r\n            if(err) res.send(err);\r\n            else res.json(data); // Get JSON format of contact\r\n        });\r\n    }\r\n    \r\n    // UPDATE - tag record by name\r\n    updateTagByName(req, res) {\r\n        TagModel.findOneAndUpdate({name: req.params.name}, req.body, { new: true }, (err, data)=> {\r\n            if (err) res.send(err);\r\n            else res.json(data); // Get JSON format of data\r\n        });\r\n    }\r\n    \r\n    // DELETE - tag record by name\r\n    deleteTagByName(req, res) {\r\n        TagModel.deleteOne({name: req.params.name}, (err)=>{\r\n            if (err) res.send(err);\r\n            else res.json({ message: 'Successfully deleted tag record'});\r\n        });\r\n    }\r\n\r\n    // RETRIEVE - tag record by id\r\n    getTagById(req, res) {\r\n        TagModel.find({_id: req.params.tagId},(err, data)=>{\r\n            if(err) res.send(err);\r\n            else res.json(data); // Get JSON format of contact\r\n        });\r\n    }\r\n    \r\n    // UPDATE - tag record by id\r\n    updateTagById(req, res) {\r\n        TagModel.findOneAndUpdate({_id: req.params.tagId}, req.body, { new: true }, (err, data)=> {\r\n            if (err) res.send(err);\r\n            else res.json(data); // Get JSON format of data\r\n        });\r\n    }\r\n    \r\n    // DELETE - tag record by id\r\n    deleteTagById(req, res) {\r\n        TagModel.deleteOne({_id: req.params.tagId}, (err)=>{\r\n            if (err) res.send(err);\r\n            else res.json({ message: 'Successfully deleted tag record'});\r\n        });\r\n    }\r\n\r\n\r\n}"]}