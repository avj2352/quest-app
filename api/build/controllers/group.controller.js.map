{"version":3,"sources":["../../src/controllers/group.controller.js"],"names":["GroupController","req","res","GroupModel","find","err","data","send","json","premium","newGroupRecord","body","save","_id","params","groupId","findOneAndUpdate","new","deleteOne","message"],"mappings":";;;;;;;qjBAAA;;;;;AAGA;;;;IAEaA,e,WAAAA,e;;;;;;;qCAEKC,G,EAAKC,G,EAAK;AACpBC,8BAAWC,IAAX,CAAgB,EAAhB,EAAoB,UAACC,GAAD,EAAMC,IAAN,EAAa;AAC7B,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT;AACR,aAHD;AAIH;;;mDAE2BL,G,EAAKC,G,EAAK;AAClCC,8BAAWC,IAAX,CAAgB,EAACK,SAAS,KAAV,EAAhB,EAAkC,UAACJ,GAAD,EAAMC,IAAN,EAAa;AAC3C,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT;AACR,aAHD;AAIH;;AAED;;;;oCACaL,G,EAAKC,G,EAAK;AACnB,gBAAIQ,iBAAiB,IAAIP,iBAAJ,CAAeF,IAAIU,IAAnB,CAArB;AACAD,2BAAeE,IAAf,CAAoB,UAACP,GAAD,EAAMC,IAAN,EAAa;AAC7B,oBAAGD,GAAH,EAAQH,IAAIK,IAAJ,CAASF,GAAT,EAAR,KACKH,IAAIK,IAAJ,CAASD,IAAT;AACR,aAHD;AAIH;;AAED;;;;qCACcL,G,EAAKC,G,EAAK;AACpBC,8BAAWC,IAAX,CAAgB,EAACS,KAAKZ,IAAIa,MAAJ,CAAWC,OAAjB,EAAhB,EAA2C,UAACV,GAAD,EAAMC,IAAN,EAAa;AACpD,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT;AACR,aAHD;AAIH;;;wCAEgBL,G,EAAKC,G,EAAK;AACvBC,8BAAWa,gBAAX,CAA4B,EAACH,KAAKZ,IAAIa,MAAJ,CAAWC,OAAjB,EAA5B,EAAuDd,IAAIU,IAA3D,EAAiE,EAAEM,KAAK,IAAP,EAAjE,EAAgF,UAACZ,GAAD,EAAMC,IAAN,EAAa;AACzF,oBAAID,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAASF,IAAT,EAFoF,CAEpE;AACxB,aAHD;AAIH;;;wCAEgBL,G,EAAKC,G,EAAK;AACvBC,8BAAWe,SAAX,CAAqB,EAACL,KAAKZ,IAAIa,MAAJ,CAAWC,OAAjB,EAArB,EAAgD,UAACV,GAAD,EAAO;AACnD,oBAAIA,GAAJ,EAASH,IAAIK,IAAJ,CAASF,GAAT,EAAT,KACKH,IAAIM,IAAJ,CAAS,EAACW,6CAA2ClB,IAAIa,MAAJ,CAAWC,OAAvD,EAAT;AACR,aAHD;AAIH","file":"group.controller.js","sourcesContent":["/**\r\n * CRUD - Controller for Group Model\r\n*/\r\nimport { GroupModel } from './../models/group.model';\r\n\r\nexport class GroupController {\r\n\r\n    getAllGroups (req, res) {\r\n        GroupModel.find({}, (err, data)=>{\r\n            if (err) res.send(err);\r\n            else res.json(data);\r\n        });\r\n    }\r\n\r\n    filterGroupsWithoutPremium (req, res) {\r\n        GroupModel.find({premium: false}, (err, data)=>{\r\n            if (err) res.send(err);\r\n            else res.json(data);\r\n        });\r\n    }\r\n\r\n    // CREATE - group record\r\n    addNewGroup (req, res) {\r\n        let newGroupRecord = new GroupModel(req.body);\r\n        newGroupRecord.save((err, data)=>{\r\n            if(err) res.send(err);\r\n            else res.send(data);\r\n        });\r\n    }\r\n\r\n    // RETRIEVE - group record by id\r\n    getGroupById (req, res) {\r\n        GroupModel.find({_id: req.params.groupId}, (err, data)=>{\r\n            if (err) res.send(err);\r\n            else res.json(data);\r\n        });\r\n    }\r\n\r\n    updateGroupById (req, res) {\r\n        GroupModel.findOneAndUpdate({_id: req.params.groupId}, req.body, { new: true }, (err, data)=>{\r\n            if (err) res.send(err);\r\n            else res.json(data); // Get JSON format of contact\r\n        });\r\n    }\r\n\r\n    deleteGroupById (req, res) {\r\n        GroupModel.deleteOne({_id: req.params.groupId}, (err)=>{\r\n            if (err) res.send(err);\r\n            else res.json({message: `Successfully deleted group id: ${req.params.groupId}`});\r\n        });\r\n    }\r\n}"]}