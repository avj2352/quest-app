{"version":3,"sources":["../../src/routes/app.routes.js"],"names":["tag","TagController","group","GroupController","user","UserController","question","QuestionsController","map","InventoryController","auth","BasicAuthentication","queries","QueriesController","routes","app","route","get","getAllTags","post","addNewTag","getTagById","put","updateTagById","delete","deleteTagById","getTagByName","updateTagByName","deleteTagByName","getAllGroups","addNewGroup","getGroupsWithQuestions","filterGroupsByUserPremium","getGroupById","updateGroupById","deleteGroupById","getAllUsers","addNewUser","getUserById","updateUserById","deleteUserById","getUserDetailsByEmail","getAllQuestions","addNewQuestion","getQuestionById","updateQuestionById","deleteQuestionById","getQuestionByGroupId","addNewRecord","deleteRecord","authenticateUser","convertMarkdown"],"mappings":";;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,IAAIC,kBAAJ,EAAZ,C,CAbA;;;;AAcA,IAAMC,QAAQ,IAAIC,sBAAJ,EAAd;AACA,IAAMC,OAAO,IAAIC,oBAAJ,EAAb;AACA,IAAMC,WAAW,IAAIC,kCAAJ,EAAjB;AACA,IAAMC,MAAM,IAAIC,8BAAJ,EAAZ;AACA,IAAMC,OAAO,IAAIC,0BAAJ,EAAb;AACA,IAAMC,UAAU,IAAIC,0BAAJ,EAAhB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAS;;AAEpB;AACAA,QAAIC,KAAJ,CAAU,MAAV,EACCC,GADD,CACKjB,IAAIkB,UADT,EAECC,IAFD,CAEMnB,IAAIoB,SAFV;;AAIAL,QAAIC,KAAJ,CAAU,aAAV,EACCC,GADD,CACKjB,IAAIqB,UADT,EAECC,GAFD,CAEKtB,IAAIuB,aAFT,EAGCC,MAHD,CAGQxB,IAAIyB,aAHZ;;AAKAV,QAAIC,KAAJ,CAAU,gBAAV,EACCC,GADD,CACKjB,IAAI0B,YADT,EAECJ,GAFD,CAEKtB,IAAI2B,eAFT,EAGCH,MAHD,CAGQxB,IAAI4B,eAHZ;;AAKA;AACAb,QAAIC,KAAJ,CAAU,QAAV,EACCC,GADD,CACKf,MAAM2B,YADX,EAECV,IAFD,CAEMjB,MAAM4B,WAFZ;;AAIA;AACAf,QAAIC,KAAJ,CAAU,qBAAV,EACCC,GADD,CACKL,QAAQmB,sBADb;;AAGA;AACAhB,QAAIC,KAAJ,CAAU,iBAAV,EACCC,GADD,CACKL,QAAQoB,yBADb;;AAGAjB,QAAIC,KAAJ,CAAU,iBAAV,EACCC,GADD,CACKf,MAAM+B,YADX,EAECX,GAFD,CAEKpB,MAAMgC,eAFX,EAGCV,MAHD,CAGQtB,MAAMiC,eAHd;;AAKA;AACApB,QAAIC,KAAJ,CAAU,OAAV,EACCC,GADD,CACKb,KAAKgC,WADV,EAECjB,IAFD,CAEMf,KAAKiC,UAFX;;AAIAtB,QAAIC,KAAJ,CAAU,eAAV,EACCC,GADD,CACKb,KAAKkC,WADV,EAEChB,GAFD,CAEKlB,KAAKmC,cAFV,EAGCf,MAHD,CAGQpB,KAAKoC,cAHb;;AAKA;AACAzB,QAAIC,KAAJ,CAAU,sBAAV,EACCC,GADD,CACKP,KAAK+B,qBADV;;AAGA;AACA1B,QAAIC,KAAJ,CAAU,WAAV,EACCC,GADD,CACKX,SAASoC,eADd,EAECvB,IAFD,CAEMb,SAASqC,cAFf;;AAIA5B,QAAIC,KAAJ,CAAU,uBAAV,EACCC,GADD,CACKX,SAASsC,eADd,EAECtB,GAFD,CAEKhB,SAASuC,kBAFd,EAGCrB,MAHD,CAGQlB,SAASwC,kBAHjB;;AAKA;AACA/B,QAAIC,KAAJ,CAAU,2BAAV,EACCC,GADD,CACKX,SAASyC,oBADd;;AAGA;AACAhC,QAAIE,GAAJ,CAAQ,2BAAR,EAAqCT,IAAIwC,YAAzC;AACAjC,QAAIE,GAAJ,CAAQ,6BAAR,EAAuCT,IAAIyC,YAA3C;;AAEA;AACAlC,QAAIC,KAAJ,CAAU,QAAV,EACCG,IADD,CACMT,KAAKwC,gBADX;;AAGA;AACAnC,QAAIC,KAAJ,CAAU,UAAV,EACCG,IADD,CACMgC,sBADN;AAEH,CA1ED;;kBA6EerC,M","file":"app.routes.js","sourcesContent":["/**\r\n * Main Webservice Routes application\r\n*/\r\nimport { handleOAuth } from './../handlers/oauth';\r\nimport { TagController } from './../controllers/tag.controller';\r\nimport { GroupController } from './../controllers/group.controller';\r\nimport { UserController } from './../controllers/user.controller';\r\nimport { QuestionsController } from './../controllers/questionnaire.controller';\r\nimport { InventoryController } from './../controllers/inventory.controller';\r\nimport { BasicAuthentication } from '../handlers/basic.auth';\r\nimport { QueriesController } from './../handlers/queries';\r\nimport { convertMarkdown } from './../helpers/index';\r\n\r\nconst tag = new TagController();\r\nconst group = new GroupController();\r\nconst user = new UserController();\r\nconst question = new QuestionsController();\r\nconst map = new InventoryController();\r\nconst auth = new BasicAuthentication();\r\nconst queries = new QueriesController();\r\n\r\nconst routes = (app) => {\r\n\r\n    // TAGS =======================\r\n    app.route('/tag')\r\n    .get(tag.getAllTags)\r\n    .post(tag.addNewTag);\r\n\r\n    app.route('/tag/:tagId')\r\n    .get(tag.getTagById)\r\n    .put(tag.updateTagById)\r\n    .delete(tag.deleteTagById);\r\n\r\n    app.route('/tagName/:name')    \r\n    .get(tag.getTagByName)    \r\n    .put(tag.updateTagByName)    \r\n    .delete(tag.deleteTagByName);\r\n    \r\n    // GROUPS =======================\r\n    app.route('/group')\r\n    .get(group.getAllGroups)\r\n    .post(group.addNewGroup);\r\n\r\n    // query\r\n    app.route('/groupWithQuestions')\r\n    .get(queries.getGroupsWithQuestions);\r\n\r\n    // FILTERED GROUPS =============\r\n    app.route('/filtered/group')\r\n    .get(queries.filterGroupsByUserPremium);\r\n    \r\n    app.route('/group/:groupId')\r\n    .get(group.getGroupById)\r\n    .put(group.updateGroupById)\r\n    .delete(group.deleteGroupById);\r\n\r\n    // USERS ========================\r\n    app.route('/user')\r\n    .get(user.getAllUsers)\r\n    .post(user.addNewUser);\r\n\r\n    app.route('/user/:userId')\r\n    .get(user.getUserById)\r\n    .put(user.updateUserById)\r\n    .delete(user.deleteUserById);\r\n\r\n    // Get User by Email\r\n    app.route('/user/email/:emailId')\r\n    .get(auth.getUserDetailsByEmail);\r\n\r\n    // QUESTIONNAIRE ================\r\n    app.route('/question')\r\n    .get(question.getAllQuestions)\r\n    .post(question.addNewQuestion);\r\n\r\n    app.route('/question/:questionId')\r\n    .get(question.getQuestionById)\r\n    .put(question.updateQuestionById)\r\n    .delete(question.deleteQuestionById);\r\n\r\n    // QUESTIONNAIRE BY GROUPID ========\r\n    app.route('/question/groups/:groupId')\r\n    .get(question.getQuestionByGroupId);\r\n\r\n    // INVENTORY ===================\r\n    app.get('/read/:userId/:questionId', map.addNewRecord);\r\n    app.get('/unread/:userId/:questionId', map.deleteRecord);\r\n\r\n    // Simple Authentication =========\r\n    app.route('/login')  \r\n    .post(auth.authenticateUser);\r\n\r\n    // convert json to markdown\r\n    app.route('/convert')\r\n    .post(convertMarkdown);\r\n};\r\n\r\n\r\nexport default routes;"]}