{"version":3,"sources":["../../src/handlers/basic.auth.js"],"names":["BasicAuthentication","user","UserController","getUserDetailsByEmail","bind","authenticateUser","req","res","email","body","password","fetchUserByEmail","then","bcrypt","compareSync","sendStatus","catch","err","send","getUserByEmail","params","emailId","json","data"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;IAEaA,mB,WAAAA,mB;AAET,mCAAc;AAAA;;AACV,aAAKC,IAAL,GAAY,IAAIC,oBAAJ,EAAZ;AACA,aAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA7B;AACA,aAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;;;yCAEiBE,G,EAAKC,G,EAAK;AACxB,gBAAG;AACC,oBAAMC,QAAQF,IAAIG,IAAJ,CAASD,KAAvB;AACA,oBAAME,WAAWJ,IAAIG,IAAJ,CAASC,QAA1B;AACA;AACA,qBAAKT,IAAL,CAAUU,gBAAV,CAA2BH,KAA3B,EACCI,IADD,CACM,gBAAQ;AACV;AACA,wBAAGC,iBAAOC,WAAP,CAAmBJ,QAAnB,EAA6BT,KAAKS,QAAlC,CAAH,EAAgD;AAC5CH,4BAAIQ,UAAJ,CAAe,GAAf;AACH,qBAFD,MAEO;AACHR,4BAAIQ,UAAJ,CAAe,GAAf;AACH;AACJ,iBARD,EASCC,KATD,CASO,eAAO;AACVT,wBAAIQ,UAAJ,CAAe,GAAf;AACH,iBAXD;AAYH,aAhBD,CAgBE,OAAOE,GAAP,EAAY;AACVV,oBAAIW,IAAJ,CAASD,GAAT;AACH;AACJ;;;8CAEsBX,G,EAAKC,G,EAAK;AACzB,iBAAKN,IAAL,CAAUkB,cAAV,CAAyBb,IAAIc,MAAJ,CAAWC,OAApC,EACCT,IADD,CACM,gBAAQ;AACV;AACAL,oBAAIe,IAAJ,CAASC,IAAT;AACH,aAJD,EAKCP,KALD,CAKO,eAAO;AACVT,oBAAIW,IAAJ,CAASD,GAAT;AACH,aAPD;AAQP","file":"basic.auth.js","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport { saltRounds, UserController } from '../controllers/user.controller';\r\nimport { UserModel } from '../models/user.model';\r\n\r\nexport class BasicAuthentication {\r\n\r\n    constructor() {\r\n        this.user = new UserController();\r\n        this.getUserDetailsByEmail = this.getUserDetailsByEmail.bind(this);\r\n        this.authenticateUser = this.authenticateUser.bind(this);\r\n    }\r\n\r\n    authenticateUser (req, res) {\r\n        try{    \r\n            const email = req.body.email;\r\n            const password = req.body.password;\r\n            // console.log('email and password is: ', email, password);\r\n            this.user.fetchUserByEmail(email)\r\n            .then(user => {\r\n                // console.log('User password is: ', user.password);\r\n                if(bcrypt.compareSync(password, user.password)) {\r\n                    res.sendStatus(200);\r\n                } else {\r\n                    res.sendStatus(400);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                res.sendStatus(400);\r\n            })\r\n        } catch (err) {\r\n            res.send(err);\r\n        }\r\n    }\r\n\r\n    getUserDetailsByEmail (req, res) {        \r\n            this.user.getUserByEmail(req.params.emailId)\r\n            .then(data => {\r\n                // console.log('Success!', data);\r\n                res.json(data);\r\n            })\r\n            .catch(err => {\r\n                res.send(err);\r\n            });        \r\n    }\r\n\r\n}"]}