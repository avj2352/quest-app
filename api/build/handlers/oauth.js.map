{"version":3,"sources":["../../src/handlers/oauth.js"],"names":["useGoogleOAuth","callback","passport","use","GoogleStrategy","clientID","gClientID","clientSecret","gClientSecret","callbackURL","passReqToCallback","request","accessToken","refreshToken","profile","done","console","log","UserModel","findOne","email","emails","value","then","user","name","displayName","provider","premium","save"],"mappings":";;;;;;;AAGA;;;;AACA;;AACA;;AACA;;;;AAEA;AARA;;;AASO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,QAAD,EAAc;;AAExCC,uBAASC,GAAT,CAAa,IAAIC,6BAAJ,CAAmB;AAC5BC,kBAAUC,4BADkB;AAE5BC,sBAAcC,gCAFc;AAG5BC,qBAAa,uBAHe;AAI5BC,2BAAmB;AAJS,KAAnB,EAKV,UAACC,OAAD,EAAUC,WAAV,EAAuBC,YAAvB,EAAqCC,OAArC,EAA8CC,IAA9C,EAAqD;AACpDC,gBAAQC,GAAR,CAAY,eAAZ,EAA6BL,WAA7B,EAA0CE,OAA1C;AACAI,wBAAUC,OAAV,CAAkB,EAAEC,OAAON,QAAQO,MAAR,CAAe,CAAf,EAAkBC,KAA3B,EAAlB,EAAqDC,IAArD,CAA0D,gBAAQ;AAClE,gBAAIC,IAAJ,EAAU;AACNT,qBAAK,IAAL,EAAWS,IAAX;AACH,aAFD,MAEO;AACH,oBAAIN,eAAJ,CAAc;AACVO,0BAAMX,QAAQY,WADJ;AAEVN,2BAAON,QAAQO,MAAR,CAAe,CAAf,EAAkBC,KAFf;AAGVK,8BAAU,QAHA;AAIVC,6BAAS;AAJC,iBAAd,EAKGC,IALH,GAMCN,IAND,CAMM;AAAA,2BAAQR,KAAK,IAAL,EAAWS,IAAX,CAAR;AAAA,iBANN;AAOH;AACJ,SAZG;AAaH,KApBY,CAAb;AAqBH,CAvBM","file":"oauth.js","sourcesContent":["/**\r\n * Authentication Handler Functions\r\n */\r\nimport passport from 'passport';\r\nimport { Strategy as GoogleStrategy } from  'passport-google-oauth20';\r\nimport { gClientID, gClientSecret } from '../config/google-oauth-config';\r\nimport { UserModel } from '../models/user.model';\r\n\r\n// Create an instance of GoogleStrategy and configure it in passport\r\nexport const useGoogleOAuth = (callback) => {\r\n    \r\n    passport.use(new GoogleStrategy({\r\n        clientID: gClientID,\r\n        clientSecret: gClientSecret,\r\n        callbackURL: '/auth/google/callback',\r\n        passReqToCallback: true\r\n    }, (request, accessToken, refreshToken, profile, done)=>{      \r\n        console.log('From server: ', accessToken, profile);\r\n        UserModel.findOne({ email: profile.emails[0].value}).then(user => {\r\n        if (user) {\r\n            done(null, user);\r\n        } else {\r\n            new UserModel({\r\n                name: profile.displayName,\r\n                email: profile.emails[0].value,\r\n                provider: 'google',\r\n                premium: false\r\n            }).save()            \r\n            .then(user => done(null, user));\r\n        }\r\n    }); \r\n    }));\r\n};\r\n\r\n"]}